{"path":"apis/comment","templateID":1,"sharedPropsHashes":{"apiList":"16g7ha"},"localProps":{"reference":{"title":"コメント","slug":"apis/comment","description":"「コメント」のAPIでの利用方法","order":6,"navi":"APIでの利用方法","contents":"<h2 id=\"目次\">目次</h2>\n<ul>\n<li><a href=\"#%E3%82%B7%E3%83%BC%E3%83%B3%E8%A8%AD%E5%AE%9AAPI\">シーン設定API</a></li>\n<li><a href=\"#%E3%82%B7%E3%83%BC%E3%83%B3%E5%88%87%E3%82%8A%E6%9B%BF%E3%81%88API\">シーン切り替えAPI</a></li>\n<li><a href=\"#%E3%82%B3%E3%83%B3%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%83%95%E3%82%A1%E3%82%AF%E3%82%BF%E3%83%BCAPI\">コンテキストファクターAPI</a></li>\n<li><a href=\"#%E3%83%9E%E3%82%A4%E3%83%8A%E3%83%BC%E3%82%B3%E3%83%B3%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88API\">マイナーコンテキストAPI</a></li>\n<li><a href=\"#%E3%82%B3%E3%83%B3%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88API\">コンテキストAPI</a></li>\n<li><a href=\"#%E8%A1%A8%E7%A4%BA%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88%E5%8F%96%E5%BE%97API\">表示コメント取得API</a></li>\n<li><a href=\"#%E6%8A%95%E7%A8%BF%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88%E5%8F%96%E5%BE%97API\">投稿コメント取得API</a></li>\n<li><a href=\"#verbose%E3%83%A2%E3%83%BC%E3%83%89API\">verboseモードAPI</a></li>\n<li><a href=\"#%E3%82%B7%E3%83%BC%E3%83%B3%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88%E5%8F%96%E5%BE%97API\">シーンコメント取得API</a></li>\n<li><a href=\"#gpos%E3%83%A2%E3%83%BC%E3%83%89%E8%A8%AD%E5%AE%9AAPI\">gposモード設定API</a></li>\n</ul>\n<h2 id=\"apiでの利用方法\">APIでの利用方法</h2>\n<h3 id=\"シーン設定api\">シーン設定API</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">メソッド</th>\n<th align=\"left\"><code>window.RPGAtsumaru.comment.changeScene(sceneName: string)</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">説明</td>\n<td align=\"left\"><ul><li>コメントシステムのシーンを設定する。</li><li>シーンが切り替わると、そのシーンのコメント空間に切り替わる。</li><li>ツクールでは基本的にマップID=シーン名となる。</li><li>サーバーアクセスが発生する。（ただし直近5つのsceneはキャッシュされ、再アクセスには発生しない）</li><li>シーン名は64文字までのascii限定。</li></ul><br>※なお、アンダースコア２つで始まるシーン名は特殊用途として予約されています。<br>予約されている中で現在利用可能なシーン名は <code>__title</code> と <code>__gameover</code> の2つで、 <code>__title</code> は内部状態の初期値になっています。</td>\n</tr>\n<tr>\n<td align=\"left\">引数</td>\n<td align=\"left\">シーン名を表す文字列</td>\n</tr>\n<tr>\n<td align=\"left\">戻り値</td>\n<td align=\"left\">なし</td>\n</tr>\n</tbody></table>\n<h3 id=\"シーン切り替えapi\">シーン切り替えAPI</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">メソッド</th>\n<th align=\"left\"><code>window.RPGAtsumaru.comment.resetAndChangeScene(sceneName: string)</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">説明</td>\n<td align=\"left\"><ul><li>changeSceneと違い、context(contextfactorとminorcontext)による内部状態をリセットしつつシーンを切り替える</li><li>サーバーアクセスが発生する。（ただし直近5つのsceneはキャッシュされ、再アクセスには発生しない）</li><li>ツクール製ゲームではタイトルとゲームオーバーで全員同じコメントが流れる機能のために使用しています。</li></ul></td>\n</tr>\n<tr>\n<td align=\"left\">引数</td>\n<td align=\"left\">シーン名を表す文字列</td>\n</tr>\n<tr>\n<td align=\"left\">戻り値</td>\n<td align=\"left\">なし</td>\n</tr>\n</tbody></table>\n<h3 id=\"コンテキストファクターapi\">コンテキストファクターAPI</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">メソッド</th>\n<th align=\"left\"><code>window.RPGAtsumaru.comment.pushContextFactor(factor: string)</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">説明</td>\n<td align=\"left\"><ul><li>コメントシステムにContextFactorとなる値(ツクールでいうセリフと選択肢)をpushして、contextを更新する。</li><li>contextが更新されることでgposが更新され、文脈にあわせたコメントが流れる。</li><li>また、minorcontextを初期化する。</li><li><strong>gpos v1以外では無効なため、利用非推奨</strong></li></ul></td>\n</tr>\n<tr>\n<td align=\"left\">引数</td>\n<td align=\"left\">コメントシステムにpushするコンテキストを表す文字列</td>\n</tr>\n<tr>\n<td align=\"left\">戻り値</td>\n<td align=\"left\">なし</td>\n</tr>\n</tbody></table>\n<h3 id=\"マイナーコンテキストapi\">マイナーコンテキストAPI</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">メソッド</th>\n<th align=\"left\"><code>window.RPGAtsumaru.comment.pushMinorContext()</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">説明</td>\n<td align=\"left\"><ul><li>コメントシステムのgposを更新する。</li><li>contextが更新されることでgposKeyが更新され、文脈にあわせたコメントが流れる。</li><li>内部的にminorcontext値を持っており、それを+1することでgposを更新している。pushContextFactorを使うと、minorcontext値は初期値に戻される。</li><li>MinorContextは「ContextFactorのさらに細かい状態」を想定している。</li><li>ツクールではエンジンにwaitがかかるような命令で使用している。</li><li><strong>gpos v1以外では無効なため、利用非推奨</strong></li></ul></td>\n</tr>\n<tr>\n<td align=\"left\">引数</td>\n<td align=\"left\">なし</td>\n</tr>\n<tr>\n<td align=\"left\">戻り値</td>\n<td align=\"left\">なし</td>\n</tr>\n</tbody></table>\n<h3 id=\"コンテキストapi\">コンテキストAPI</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">メソッド</th>\n<th align=\"left\"><code>window.RPGAtsumaru.comment.setContext(context: string)</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">説明</td>\n<td align=\"left\"><ul><li>pushContextFactorと違い、contextを引数に渡した値で直接書き換える。</li><li>特定のScene内でまったく同じゲーム状態を厳密に作りたい場合に使う。</li><li>このときの context の値は、ascii 64文字以下推奨。</li></ul></td>\n</tr>\n<tr>\n<td align=\"left\">引数</td>\n<td align=\"left\">コンテキスト値を表す文字列</td>\n</tr>\n<tr>\n<td align=\"left\">戻り値</td>\n<td align=\"left\">なし</td>\n</tr>\n</tbody></table>\n<h3 id=\"表示コメント取得api\">表示コメント取得API</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">メソッド</th>\n<th align=\"left\"><code>window.RPGAtsumaru.comment.cameOut.subscribe(next: (comment: CameoutComments) =&gt; void)</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">説明</td>\n<td align=\"left\"><ul><li>ゲーム画面に今まさに流れるコメントをリアルタイムで取得できるAPIです。</li><li>表示前のコメントは取得できません。</li><li>このAPIでは<a href=\"/gift\">ギフト</a>についてもコメントの一種として取り扱うため、一緒くたに取得できます。</li></ul></td>\n</tr>\n<tr>\n<td align=\"left\">引数</td>\n<td align=\"left\">ゲームアツマールのコメント情報( <code>CameoutComments</code> )を受け取るコールバック関数</td>\n</tr>\n<tr>\n<td align=\"left\">戻り値</td>\n<td align=\"left\"><code>subscription</code> .unsubscribe(); 呼び出しにより、コールバック関数を解除できます</td>\n</tr>\n</tbody></table>\n<h4 id=\"コメントの型-cameoutcomments-について\">コメントの型 CameoutComments について</h4>\n<p>取得できる <code>CameoutComments</code> は以下のような型です。</p>\n<pre><code class=\"language-js\">type CameoutComments = ({\n    type: &quot;comment&quot;\n    command: string\n    comment: string\n    createdAt: number\n} | {\n    type: &quot;gift&quot;\n    command: string\n    comment: string\n    createdAt: number\n    userName: string\n    point: number\n    thanks: boolean\n    reply: string\n})[]</code></pre>\n<p>プロパティの内容は次のようになっています。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">プロパティ</th>\n<th align=\"left\">型</th>\n<th align=\"left\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">(this)</td>\n<td align=\"left\"><code>array</code></td>\n<td align=\"left\">現在のシーンに表示されたコメントのリスト</td>\n</tr>\n<tr>\n<td align=\"left\">length</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\">コメントの件数</td>\n</tr>\n<tr>\n<td align=\"left\">[n].type</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">通常のコメントの場合 <code>comment</code> 、ギフトの場合 <code>gift</code></td>\n</tr>\n<tr>\n<td align=\"left\">[n].command</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">n+1番目のコメントのコマンド</td>\n</tr>\n<tr>\n<td align=\"left\">[n].comment</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">n+1番目のコメントの内容</td>\n</tr>\n<tr>\n<td align=\"left\">[n].createdAt</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\">n+1番目のコメントの投稿時刻（unix time sec）</td>\n</tr>\n<tr>\n<td align=\"left\">[n].userName</td>\n<td align=\"left\"><code>string?</code></td>\n<td align=\"left\">n+1番目のギフトのユーザー名（※匿名でないギフトの場合のみ）</td>\n</tr>\n<tr>\n<td align=\"left\">[n].point</td>\n<td align=\"left\"><code>number?</code></td>\n<td align=\"left\">n+1番目のギフトのポイント（※ギフトの場合のみ）</td>\n</tr>\n<tr>\n<td align=\"left\">[n].thanks</td>\n<td align=\"left\"><code>boolean?</code></td>\n<td align=\"left\">n+1番目のギフトに作者からの感謝（ハートマーク）が送られているか（※ギフトの場合のみ）</td>\n</tr>\n<tr>\n<td align=\"left\">[n].reply</td>\n<td align=\"left\"><code>string?</code></td>\n<td align=\"left\">n+1番目のギフトへの作者からの返信（※ギフトの場合のみ）</td>\n</tr>\n</tbody></table>\n<h4 id=\"使い方の例\">使い方の例</h4>\n<pre><code class=\"language-js\">// まずsubscribeにより「画面上にコメントが表示されたらどうするか」を関数として登録する\nvar subscription = window.RPGAtsumaru.comment.cameOut.subscribe(function(comments) {\n    // この関数は「ゲームの場面(gpos)が切り替わるたびに」実行され、\n    // 引数のcommentsにはこの画面上に流れるコメントの情報が入っている\n    console.log(comments);\n});\n\n// console.logの結果の例\n[\n    {\n        // コメントの場合はcommand, comment, createdAtだけが取得でき、残りはundefined\n        type: &quot;comment&quot;,\n        command: &quot;&quot;,\n        comment: &quot;１ゲット&quot;,\n        createdAt: 1534567890,\n        userName: undefined,\n        point: undefined,\n        reply: undefined,\n        thanks: undefined,\n    },\n    {\n        // ギフトの場合はすべての項目が存在する。ただしcommentやreplyが空欄だったり、匿名のためuserNameが空欄なことはありうる\n        type: &quot;gift&quot;,\n        command: &quot;red shita big&quot;,\n        comment: &quot;ゲーム開発、がんばライオン！&quot;,\n        createdAt: 1534567890,\n        userName: &quot;アツマライオン&quot;,\n        point: 1000,\n        reply: &quot;ありがライオン！！！！！&quot;,\n        thanks: true,\n    }\n]\n\n// 登録を解除したい場合はunsubscribe\nsubscription.unsubscribe();</code></pre>\n<h3 id=\"投稿コメント取得api\">投稿コメント取得API</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">メソッド</th>\n<th align=\"left\"><code>window.RPGAtsumaru.comment.posted.subscribe(next: (comment: PostedComment) =&gt; void)</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">説明</td>\n<td align=\"left\"><ul><li>このユーザーが今まさに投稿したコメント情報をリアルタイムで取得できるAPIです。</li><li>あくまで投稿時（コメントが黄色い枠で囲まれているとき）に取得できるAPIです。本人の投稿であっても、後に同じシーンに再訪した際は前述の表示コメントAPIの方に流れます。</li><li>このAPIでは<a href=\"/gift\">ギフト</a>についてもコメントの一種として取り扱うため、一緒くたに取得できます。</li></ul></td>\n</tr>\n<tr>\n<td align=\"left\">引数</td>\n<td align=\"left\">ゲームアツマールのコメント情報( <code>PostedComment</code> )を受け取るコールバック関数</td>\n</tr>\n<tr>\n<td align=\"left\">戻り値</td>\n<td align=\"left\"><code>subscription</code> .unsubscribe(); 呼び出しにより、コールバック関数を解除できます</td>\n</tr>\n</tbody></table>\n<h4 id=\"コメントの型-postedcomments-について\">コメントの型 PostedComments について</h4>\n<p>取得できる <code>PostedComment</code> は以下のような型です。</p>\n<pre><code class=\"language-js\">type PostedComment = {\n    type: &quot;comment&quot;\n    command: string\n    comment: string\n} | {\n    type: &quot;gift&quot;\n    command: string\n    comment: string\n    point: number\n}</code></pre>\n<p>プロパティの内容は次のようになっています。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">プロパティ</th>\n<th align=\"left\">型</th>\n<th align=\"left\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">type</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">通常のコメントの場合 <code>comment</code> 、ギフトの場合 <code>gift</code></td>\n</tr>\n<tr>\n<td align=\"left\">command</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">投稿したコメントのコマンド</td>\n</tr>\n<tr>\n<td align=\"left\">comment</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">投稿したコメントの内容</td>\n</tr>\n<tr>\n<td align=\"left\">point</td>\n<td align=\"left\"><code>number?</code></td>\n<td align=\"left\">投稿したギフトのポイント（※ギフトの場合のみ）</td>\n</tr>\n</tbody></table>\n<h4 id=\"使い方の例-1\">使い方の例</h4>\n<pre><code class=\"language-js\">// まずsubscribeにより「このユーザーがコメントを投稿したらどうするか」を関数として登録する\nvar subscription = window.RPGAtsumaru.comment.posted.subscribe(function(comment) {\n    // この関数は「このユーザーがコメントまたはギフトを投稿するたび」実行され、\n    // 引数のcommentには投稿されるコメントの情報が入っている\n    console.log(comment);\n});\n\n// console.logの結果の例（コメントの場合）\n{\n    type: &quot;comment&quot;,\n    command: &quot;&quot;,\n    comment: &quot;１ゲット&quot;,\n    point: undefined, // コメントの場合はpointはundefined\n}\n\n// console.logの結果の例（ギフトの場合）\n{\n    type: &quot;gift&quot;,\n    command: &quot;red shita big&quot;,\n    comment: &quot;ゲーム開発、がんばライオン！&quot;,\n    point: 1000, // ギフトの場合はpointにギフトの価格（消費ポイント）が入る。無料なら0\n}\n\n// 登録を解除したい場合はunsubscribe\nsubscription.unsubscribe();</code></pre>\n<h3 id=\"verboseモードapi\">verboseモードAPI</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">変数</th>\n<th align=\"left\"><code>window.RPGAtsumaru.comment.verbose</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">説明</td>\n<td align=\"left\">trueを代入すると、コメントのgpos(game position)計算の内部情報をコンソールに出力します</td>\n</tr>\n<tr>\n<td align=\"left\">代入値</td>\n<td align=\"left\"><code>boolean</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"verboseモードapiのコンソールの出力例\">verboseモードAPIのコンソールの出力例</h4>\n<p>gpos v1の場合</p>\n<pre><code>gamePos updated.\n    texts: hoge/fuga/piyo\n    increment: 1</code></pre><p>gpos v2の場合</p>\n<pre><code>gpos v2 updated.\n    scene: map1\n    context: v2/MapEvent1/page1/%E3%81%93%E3%81%AF\n    context(decoded): v2/MapEvent1/page1/こは</code></pre><p>gpos v3の場合</p>\n<pre><code>gpos v3 updated.\n    scene: map1\n    context: v3/%E3%82%84%E3%83%89%E3%81%AF%E3%81%A0%E3%82%93%E3%81%BC%5D%E3%82%A4%5B%E3%81%BF%E3%83%BC%E3%81%A6\n    context(decoded): v3/やドはだんぼ]イ[みーて</code></pre><h3 id=\"シーンコメント取得api\">シーンコメント取得API</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">メソッド</th>\n<th align=\"left\"><code>window.RPGAtsumaru.comment.getSceneComments(sceneName: string)</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">説明</td>\n<td align=\"left\">シーン名を指定してそのシーンのコメントをまるごと取得します。このAPIには、ギフトは含まれません</td>\n</tr>\n<tr>\n<td align=\"left\">引数</td>\n<td align=\"left\">シーン名を表す文字列</td>\n</tr>\n<tr>\n<td align=\"left\">戻り値</td>\n<td align=\"left\"><code>Promise&lt;{ command: string, comment: string, context: string }&gt;</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"gposモード設定api\">gposモード設定API</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">メソッド</th>\n<th align=\"left\"><code>window.RPGAtsumaru.comment.changeAutoGposMode(mode: string)</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">説明</td>\n<td align=\"left\"><code>v1</code> <code>v2</code> <code>v3</code> を指定するとgpos v1, v2, v3に変更します。 <code>none</code> でgposの自動設定自体を無効にできます</td>\n</tr>\n<tr>\n<td align=\"left\">引数</td>\n<td align=\"left\">モードを表す文字列。 <code>v1</code> <code>v2</code> <code>v3</code> <code>none</code> のどれか一つ</td>\n</tr>\n<tr>\n<td align=\"left\">戻り値</td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<h2 id=\"関連ドキュメント\">関連ドキュメント</h2>\n<table>\n<thead>\n<tr>\n<th align=\"left\">ドキュメント</th>\n<th align=\"left\">リンク</th>\n<th align=\"left\">備考</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">機能解説</td>\n<td align=\"left\"><a href=\"/comment\">コメント</a></td>\n<td align=\"left\">機能概要や全般的な解説</td>\n</tr>\n<tr>\n<td align=\"left\">プラグインでの利用方法</td>\n<td align=\"left\"><a href=\"/plugins\">プラグインでの利用方法</a></td>\n<td align=\"left\">RPGツクールシリーズユーザー向け</td>\n</tr>\n</tbody></table>\n<h2 id=\"最終更新日\">最終更新日</h2>\n<ul>\n<li>2021/02/09</li>\n</ul>\n"},"title":"コメント","path":"/apis/comment"}}
