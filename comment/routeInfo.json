{"path":"comment","templateID":1,"sharedPropsHashes":{"apiList":"ZHNfnn"},"localProps":{"reference":{"title":"コメント","slug":"comment","description":"ユーザー同士でゲーム体験を共有できるコメント機能について","order":6,"navi":"機能解説","contents":"<h2 id=\"概要\">概要</h2>\n<p>RPGアツマールでは、ユーザーのゲーム体験を共有するためにコメント機能を提供しています。設計はRPGツクールシリーズでの利用を想定していますがAPIは汎用的にも利用可能です。</p>\n<h2 id=\"なにができるのか\">なにができるのか</h2>\n<p>ゲームの内容に合わせてコメントを投稿・表示できます。</p>\n<p>コメント機能は「コメントシステム」にゲーム状態を伝えると、コメントがゲーム上に流れます。ゲームは動画と異なり、時系列のようにプレイヤー全員が共有しているコンテンツの内部状態が存在しないため、ゲームでは逐次ゲーム状態をコメントシステムに伝える必要があります。この「ゲーム状態」のことを本システムではgame position(<strong>gpos</strong>)と呼んでいます。</p>\n<p>RPGツクールシリーズにおいては、イベントごとにgposをコメントシステムに伝達しています。そのため、例えば「ヒロインのセリフ」など特定の状態をプレイヤー間で共有できます。もし、あなたがアクションゲームをつくるなら「敵を倒した」「アイテムを得た」などのイベントをgposとしてコメントシステムに伝えることになります。</p>\n<p>なお、<a href=\"/gift\">ギフト</a>が贈られると画面上にギフト演出が発生し、同じシーンに差し掛かると他のユーザーにもそのギフト演出が発生します。これもコメントのgposシステムを共用しています。</p>\n<h2 id=\"例\">例</h2>\n<p>RPGツクールMV/MZ製ゲームの場合、RPGアツマールが挿入する <code>rpgatsumaru.js</code> によって自動的にこの機能を利用しています。</p>\n<p>例えば以下のゲームで、この機能を利用してゲーム上にコメントを表示しています。</p>\n<ul>\n<li><a href=\"https://game.nicovideo.jp/atsumaru/games/gm7601\">【防衛ゲーム】タタの魔法使い【異世界サバイバル】</a></li>\n</ul>\n<h2 id=\"詳細\">詳細</h2>\n<h3 id=\"gpos-v1（gm16980以前の場合）\">gpos v1（gm16980以前の場合）</h3>\n<p>本機能を実行した際に、次のような操作を行います。</p>\n<ul>\n<li>コメントシステムのscene設定</li>\n<li>sceneの切り替え</li>\n<li>contextfactorの設定</li>\n<li>contextの設定</li>\n<li>minorcontextの設定</li>\n</ul>\n<p>gpos は scene と contextfactor と minorcontext という３つのパラメーターで表現します。プログラム的に書けば以下のようになります。</p>\n<pre><code>gpos(scene, context(contextfactor[0,-1,-2]), minorcontext)</code></pre><p>scene はコメントデータ群を表しています。scene 1つあたりで最新1,000件(※変更可能性有り)で、直近5つの scene をAPI側でキャッシュ(※変更可能性有り)します。一般的なゲームではマップや戦闘画面、メニュー画面に相当します。</p>\n<p>scene のコメントを、context の値で指定し取得することでコメントが描画されます。context は状態遷移マシンになっており、contextfactor を push することで状態が1つ進みます。状態は最新の contextfactor 3つの複合キーで表されています。context をさらに細かく分割する場合、たとえば「あるイベント内の時間」などを示すには minorcontext が便利です。minorcontext を push するごとに状態が細かく進み、それに応じたコメントが描画されます。</p>\n<p>RPGツクールMVにおいては scene は map の id に対応します。contextfactor は「セリフ」コマンドと「選択肢」コマンドで、minorcontext は「ウェイト」コマンドと、コマンド内の wait に対応します。minorcontext があることで、「セリフのあとにキャラクターが移動して演技する」ような演出に対して細かくコメントができます。</p>\n<p><img src=\"https://atsumaru.github.io/api-references/images/comment.png\" alt=\"概念図\"></p>\n<h3 id=\"gpos-v1の問題点\">gpos v1の問題点</h3>\n<p>RPGアツマールのサービス開始当初より、前節にあるようなgpos自動設定（区別のためgpos v1と呼びます）を実施しており、RPGツクールシリーズのゲームにおいて「ゲームシーンに対応したコメントを投稿＆閲覧できる」という目的を達成することについては一定の成果がありました。</p>\n<p>しかし細かく検討していくと、明らかに同じゲームの状態である（例：「こんにちは」と言っている村人に話しかけている）のにも関わらず、違うgpos状態を持つことがままありました。違うgposを持つということは、その同じ村人に話しかけてもプレイヤーによってはコメントが表示されないこともあるわけですから、せっかくのコメントが他人に見てもらえないという問題が起こります。また、実際のコメント投稿数の割には、コメントが少ないような印象を与えてしまいます。</p>\n<p>また、gpos v1の難解さも問題でした。gpos v1はまさに前節に解説してはいますが、複雑な構成となっており、理解するのには時間がかかります。APIを用いてゲーム作者がコメントシステムやgposを活用したくても、gpos v1の全容がつかめないとうまくいきません。更に、gpos v1の状態からゲームの状態を復元することができないため、せっかく理解してもコメントがどのシーンについてるのか結局わからないという問題もありました。</p>\n<p>そこで諸々の問題を解決し、「同じシーンを正しく同じgposにする」「システムをわかりやすくする」「gposを解読（ゲーム状態の復元）可能にする」ため、あるタイミング以降に投稿されたゲーム（gm16980以降）では以下に示すgpos v2を採用するようにしています。</p>\n<h3 id=\"gpos-v2の詳細（gm16980以降の場合）\">gpos v2の詳細（gm16980以降の場合）</h3>\n<p>gpos v2では、gposはシンプルに <code>scene</code> と <code>context</code> の2つの値で表現されます。 <code>scene</code> はゲームのシーンを分ける大まかな区切りで、その値は <code>map1</code> <code>map2</code> ...といったように原則「どのマップにいるのか」が <code>map + マップID</code> の形で表されます。なお、例外的にゲーム開始直後のタイトル画面のみ <code>__title</code> という値を持ちます。</p>\n<p><code>context</code> は各sceneごとに存在する更に細かい区切りで、主に「どのイベントのどの文章まで表示されたか」を値として持ちます。具体的には <code>/v2/イベントID/ページ番号/文章の要約</code> の形で表されます。</p>\n<h4 id=\"文章の要約\">文章の要約</h4>\n<p>文章の要約は、イベントコマンド「文章の表示」において表示される文章の <strong>各行の先頭文字と終了文字をつなげたもの</strong> となります。ただしgposはascii以外の文字（日本語など）を持てない仕様となっているため文章の要約はURLエンコード（<code>encodeURIComponent()</code>）されます。この仕様のため、逆に違う文章が同じgposになってしまう可能性が多少あります。（例：同じ村人イベントが <strong>同じページで</strong> 「こんにちは」と言ったり「こんばんは」と言ったりする場合。ページが違うならセーフ）</p>\n<h4 id=\"例-1\">例</h4>\n<p>以下にいくつか、具体的なゲームの状態とその際にgpos v2でどのようなgposを持つか（表示は <code>RPGAtsumaru.comment.verbose = true</code> とした際の表示に準拠）を掲載します。</p>\n<p><strong>タイトル画面</strong></p>\n<pre><code>gpos v2 updated.\n  scene: __title\n  context: v2/\n  context(decoded): v2/</code></pre><p>タイトル画面のみ、sceneは特別に <code>__title</code> となりcontextも特別に <code>v2/</code> のみとなります。</p>\n<p><strong>最初の村（マップID:1）で最初の村人（マップイベントID:1）が「こんにちは」と話す</strong></p>\n<pre><code>gpos v2 updated.\n  scene: map1\n  context: v2/MapEvent1/page1/%E3%81%93%E3%81%AF\n  context(decoded): v2/MapEvent1/page1/こは</code></pre><p><strong>こ</strong>んにち<strong>は</strong>を取って<strong>こは</strong>が文章の要約となります。</p>\n<p><strong>廃墟（マップID:2-4）内で一定時間ごとに「振り子時計から鐘の音が聞こえた…」と表示されるイベント（コモンイベントID:2）</strong></p>\n<pre><code>gpos v2 updated.\n  scene: map4\n  context: v2/CommonEvent2/page-/%E6%8C%AF%E2%80%A6\n  context(decoded): v2/CommonEvent2/page-/振…</code></pre><p>コモンイベントにはページがありませんから-で表されます。また、sceneはその時にいたマップIDに依存します。同じイベントを起動しても、マップが違えばgposは違うものになることにご注意ください。</p>\n<p><strong>廃墟屋上（マップID:5）での戦闘でボス（敵グループID:10）が「ぼくアツマライオン！（改行）みんなでゲームを作って楽しもう」と話しかけてくる</strong></p>\n<pre><code>gpos v2 updated.\n  scene: map5\n  context: v2/BattleEvent10/page1/%E3%81%BC%EF%BC%81%E3%81%BF%E3%81%86\n  context(decoded): v2/BattleEvent10/page1/ぼ！みう</code></pre><p>バトルイベントでも、sceneは戦闘開始時にいたマップのIDとなります。</p>\n<h2 id=\"利用方法\">利用方法</h2>\n<table>\n<thead>\n<tr>\n<th align=\"left\">方式</th>\n<th align=\"left\">利用方法</th>\n<th align=\"left\">備考</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">API</td>\n<td align=\"left\">APIでの利用方法の「<a href=\"/apis/comment\">コメント</a>」項を参考に、APIを実装してください</td>\n<td align=\"left\">他ゲームエンジンやより高度な利用を必要とするユーザー向け</td>\n</tr>\n</tbody></table>\n<p>※プラグインはありません</p>\n<h2 id=\"最終更新日\">最終更新日</h2>\n<ul>\n<li>2020/10/30</li>\n</ul>\n"},"title":"コメント","path":"/comment"}}
